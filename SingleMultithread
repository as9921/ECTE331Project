public static BufferedImage templateMatchingSingleThread(BufferedImage source, BufferedImage template) {
    int sourceWidth = source.getWidth();
    int sourceHeight = source.getHeight();
    int templateWidth = template.getWidth();
    int templateHeight = template.getHeight();

    double minDiff = Double.MAX_VALUE;
    int bestX = 0;
    int bestY = 0;
    double[][] absDiffMat = new double[sourceHeight - templateHeight + 1][sourceWidth - templateWidth + 1];

    for (int y = 0; y <= sourceHeight - templateHeight; y++) {
        for (int x = 0; x <= sourceWidth - templateWidth; x++) {
            double sumDiff = 0;
            for (int j = 0; j < templateHeight; j++) {
                for (int i = 0; i < templateWidth; i++) {
                    int sourceRGB = source.getRGB(x + i, y + j);
                    int templateRGB = template.getRGB(i, j);
                    sumDiff += Math.abs((sourceRGB & 0xFF) - (templateRGB & 0xFF));
                }
            }
            double meanDiff = sumDiff / (templateWidth * templateHeight);
            absDiffMat[y][x] = meanDiff;
            if (meanDiff < minDiff) {
                minDiff = meanDiff;
                bestX = x;
                bestY = y;
            }
        }
    }
